{"ast":null,"code":"import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class HttpsRequestInterceptor {\n  intercept(req, next) {\n    const userLoggedString = localStorage.getItem('user_logged');\n    var _user;\n    if (userLoggedString !== null) {\n      _user = JSON.parse(userLoggedString);\n    }\n    const dupReq = req.clone({\n      headers: req.headers.set('authorization', _user && _user.token ? 'Bearer ' + _user.token : '')\n    });\n    return next.handle(dupReq);\n  }\n}\nHttpsRequestInterceptor.ɵfac = function HttpsRequestInterceptor_Factory(t) {\n  return new (t || HttpsRequestInterceptor)();\n};\nHttpsRequestInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpsRequestInterceptor,\n  factory: HttpsRequestInterceptor.ɵfac\n});\nexport class Interceptor {}\nInterceptor.ɵfac = function Interceptor_Factory(t) {\n  return new (t || Interceptor)();\n};\nInterceptor.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: Interceptor\n});\nInterceptor.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpsRequestInterceptor,\n    multi: true\n  }]\n});","map":{"version":3,"mappings":"AAQA,SAASA,iBAAiB,QAAQ,sBAAsB;;AAKxD,OAAM,MAAOC,uBAAuB;EAElCC,SAAS,CACPC,GAAqB,EACrBC,IAAiB;IAGjB,MAAMC,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAC5D,IAAIC,KAAK;IAET,IAAIH,gBAAgB,KAAK,IAAI,EAAE;MAC7BG,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;;IAGtC,MAAMM,MAAM,GAAGR,GAAG,CAACS,KAAK,CAAC;MACvBC,OAAO,EAAEV,GAAG,CAACU,OAAO,CAACC,GAAG,CAAC,eAAe,EAAGN,KAAK,IAAIA,KAAK,CAACO,KAAK,GAAI,SAAS,GAAGP,KAAK,CAACO,KAAK,GAAG,EAAE;KAChG,CAAC;IACF,OAAOX,IAAI,CAACY,MAAM,CAACL,MAAM,CAAC;EAE5B;;AAnBWV,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;SAAvBA,uBAAuB;EAAAgB,SAAvBhB,uBAAuB;AAAA;AAkCpC,OAAM,MAAOiB,WAAW;AAAXA,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;QAAXA;AAAW;AAAXA,WAAW;aATX,CACT;IACEC,OAAO,EAAEnB,iBAAiB;IAC1BoB,QAAQ,EAAEnB,uBAAuB;IACjCoB,KAAK,EAAE;GACR;AACF","names":["HTTP_INTERCEPTORS","HttpsRequestInterceptor","intercept","req","next","userLoggedString","localStorage","getItem","_user","JSON","parse","dupReq","clone","headers","set","token","handle","factory","Interceptor","provide","useClass","multi"],"sourceRoot":"","sources":["C:\\Users\\armys\\OneDrive\\Documentos\\Projetos\\Angular-e-netcore\\Projeto-angular-e-netcore\\Projeto-angular-e-netcore\\ClientApp\\src\\app\\app.interceptor.module.ts"],"sourcesContent":["import { Injectable, NgModule } from '@angular/core';\r\n\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class HttpsRequestInterceptor implements HttpInterceptor {\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler,\r\n  ): Observable<HttpEvent<any>> {\r\n\r\n    const userLoggedString = localStorage.getItem('user_logged');\r\n    var _user;\r\n    \r\n    if (userLoggedString !== null) {\r\n      _user = JSON.parse(userLoggedString);\r\n    }\r\n\r\n    const dupReq = req.clone({\r\n      headers: req.headers.set('authorization', (_user && _user.token) ? 'Bearer ' + _user.token : ''),\r\n    });\r\n    return next.handle(dupReq);\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n@NgModule({\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpsRequestInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\n\r\nexport class Interceptor { }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}